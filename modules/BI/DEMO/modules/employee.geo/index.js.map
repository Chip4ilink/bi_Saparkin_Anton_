{"version":3,"file":"index.js","mappings":"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","sources":["webpack://employee-geo/./node_modules/ol/Disposable.js","webpack://employee-geo/./node_modules/ol/Collection.js","webpack://employee-geo/./node_modules/ol/tilecoord.js","webpack://employee-geo/./node_modules/ol/ImageTile.js","webpack://employee-geo/./node_modules/ol/MapBrowserEvent.js","webpack://employee-geo/./node_modules/ol/render/Box.js","webpack://employee-geo/./node_modules/ol/interaction/DragBox.js","webpack://employee-geo/./node_modules/ol/geom/MultiPoint.js","webpack://employee-geo/./node_modules/ol/asserts.js","webpack://employee-geo/./node_modules/ol/layer/Layer.js","webpack://employee-geo/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://employee-geo/./node_modules/ol/geom/flat/length.js","webpack://employee-geo/./node_modules/ol/extent.js","webpack://employee-geo/./node_modules/ol/style/Image.js","webpack://employee-geo/./node_modules/ol/style/Stroke.js","webpack://employee-geo/./node_modules/ol/string.js","webpack://employee-geo/./node_modules/ol/coordinate.js","webpack://employee-geo/./node_modules/ol/TileState.js","webpack://employee-geo/./node_modules/ol/TileRange.js","webpack://employee-geo/./node_modules/ol/geom/LineString.js","webpack://employee-geo/./node_modules/ol/geom/flat/segments.js","webpack://employee-geo/./node_modules/ol/interaction/Pointer.js","webpack://employee-geo/./node_modules/ol/style/Text.js","webpack://employee-geo/./node_modules/ol/interaction/DblClickDragZoom.js","webpack://employee-geo/./node_modules/ol/interaction/DragAndDrop.js","webpack://employee-geo/./node_modules/ol/interaction/DragRotateAndZoom.js","webpack://employee-geo/./node_modules/ol/interaction/Draw.js","webpack://employee-geo/./node_modules/ol/interaction/Extent.js","webpack://employee-geo/./node_modules/ol/interaction/Link.js","webpack://employee-geo/./node_modules/ol/interaction/Modify.js","webpack://employee-geo/./node_modules/ol/interaction/Select.js","webpack://employee-geo/./node_modules/ol/events/SnapEvent.js","webpack://employee-geo/./node_modules/ol/interaction/Snap.js","webpack://employee-geo/./node_modules/ol/interaction/Translate.js","webpack://employee-geo/./node_modules/ol/extent/Relationship.js","webpack://employee-geo/./node_modules/ol/math.js","webpack://employee-geo/./node_modules/ol/renderer/Layer.js","webpack://employee-geo/./node_modules/ol/renderer/canvas/Layer.js","webpack://employee-geo/./node_modules/ol/events/Event.js","webpack://employee-geo/./node_modules/ol/ViewProperty.js","webpack://employee-geo/./node_modules/ol/centerconstraint.js","webpack://employee-geo/./node_modules/ol/resolutionconstraint.js","webpack://employee-geo/./node_modules/ol/View.js","webpack://employee-geo/./node_modules/ol/Observable.js","webpack://employee-geo/./node_modules/ol/geom/SimpleGeometry.js","webpack://employee-geo/./node_modules/ol/CollectionEventType.js","webpack://employee-geo/./node_modules/ol/render/canvas/Instruction.js","webpack://employee-geo/./node_modules/ol/render/canvas/Builder.js","webpack://employee-geo/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://employee-geo/./node_modules/ol/geom/flat/linechunk.js","webpack://employee-geo/./node_modules/ol/geom/flat/straightchunk.js","webpack://employee-geo/./node_modules/ol/render/canvas/TextBuilder.js","webpack://employee-geo/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://employee-geo/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://employee-geo/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://employee-geo/./node_modules/ol/geom/flat/textpath.js","webpack://employee-geo/./node_modules/ol/render/canvas/Executor.js","webpack://employee-geo/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://employee-geo/./node_modules/ol/render/canvas/hitdetect.js","webpack://employee-geo/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://employee-geo/./node_modules/ol/layer/Vector.js","webpack://employee-geo/./src/FetchService.ts","webpack://employee-geo/./node_modules/ol/interaction/Property.js","webpack://employee-geo/./node_modules/ol/render/canvas/Immediate.js","webpack://employee-geo/./node_modules/ol/style/IconImageCache.js","webpack://employee-geo/./node_modules/quickselect/index.js","webpack://employee-geo/./node_modules/rbush/index.js","webpack://employee-geo/./node_modules/ol/sphere.js","webpack://employee-geo/./node_modules/ol/geom/flat/deflate.js","webpack://employee-geo/./node_modules/ol/MapEventType.js","webpack://employee-geo/./node_modules/ol/geom/flat/interiorpoint.js","webpack://employee-geo/./node_modules/ol/tilegrid/TileGrid.js","webpack://employee-geo/./node_modules/ol/tilegrid.js","webpack://employee-geo/./node_modules/ol/uri.js","webpack://employee-geo/./node_modules/ol/tileurlfunction.js","webpack://employee-geo/./node_modules/ol/source/Tile.js","webpack://employee-geo/./node_modules/ol/source/UrlTile.js","webpack://employee-geo/./node_modules/ol/source/TileEventType.js","webpack://employee-geo/./node_modules/ol/source/TileImage.js","webpack://employee-geo/./node_modules/ol/source/XYZ.js","webpack://employee-geo/./node_modules/ol/source/OSM.js","webpack://employee-geo/./node_modules/ol/ViewHint.js","webpack://employee-geo/./node_modules/ol/geom/LinearRing.js","webpack://employee-geo/./node_modules/ol/render/VectorContext.js","webpack://employee-geo/./node_modules/ol/geom/flat/contains.js","webpack://employee-geo/./node_modules/ol/geom/MultiPolygon.js","webpack://employee-geo/./node_modules/ol/reproj.js","webpack://employee-geo/./node_modules/ol/reproj/Triangulation.js","webpack://employee-geo/./node_modules/ol/reproj/Tile.js","webpack://employee-geo/./node_modules/ol/reproj/common.js","webpack://employee-geo/./node_modules/ol/proj/Units.js","webpack://employee-geo/./node_modules/ol/proj/Projection.js","webpack://employee-geo/./node_modules/ol/proj/epsg3857.js","webpack://employee-geo/./node_modules/ol/proj/epsg4326.js","webpack://employee-geo/./node_modules/ol/proj/projections.js","webpack://employee-geo/./node_modules/ol/proj/transforms.js","webpack://employee-geo/./node_modules/ol/proj/utm.js","webpack://employee-geo/./node_modules/ol/proj.js","webpack://employee-geo/./node_modules/mdt-client/dist/index.js","webpack://employee-geo/./node_modules/ol/geom/flat/reverse.js","webpack://employee-geo/./node_modules/ol/geom/flat/orient.js","webpack://employee-geo/./node_modules/ol/MapBrowserEventType.js","webpack://employee-geo/./node_modules/ol/easing.js","webpack://employee-geo/./node_modules/ol/obj.js","webpack://employee-geo/./node_modules/ol/renderer/vector.js","webpack://employee-geo/./node_modules/ol/style/Fill.js","webpack://employee-geo/./node_modules/ol/geom/flat/simplify.js","webpack://employee-geo/./node_modules/ol/interaction/PinchRotate.js","webpack://employee-geo/./node_modules/ol/Image.js","webpack://employee-geo/./node_modules/ol/geom/flat/closest.js","webpack://employee-geo/./node_modules/ol/render/EventType.js","webpack://employee-geo/./node_modules/ol/geom/flat/center.js","webpack://employee-geo/./node_modules/ol/interaction/DragRotate.js","webpack://employee-geo/./node_modules/ol/util.js","webpack://employee-geo/./node_modules/ol/Object.js","webpack://employee-geo/./node_modules/ol/geom/Polygon.js","webpack://employee-geo/./node_modules/ol/functions.js","webpack://employee-geo/./node_modules/ol/geom/Point.js","webpack://employee-geo/./node_modules/ol/geom/GeometryCollection.js","webpack://employee-geo/./node_modules/ol/geom/flat/intersectsextent.js","webpack://employee-geo/./node_modules/ol/console.js","webpack://employee-geo/./node_modules/ol/interaction/DragZoom.js","webpack://employee-geo/./node_modules/ol/interaction/DragPan.js","webpack://employee-geo/./node_modules/ol/rotationconstraint.js","webpack://employee-geo/./node_modules/ol/featureloader.js","webpack://employee-geo/./node_modules/ol/loadingstrategy.js","webpack://employee-geo/./node_modules/ol/render/Feature.js","webpack://employee-geo/./node_modules/ol/source/Vector.js","webpack://employee-geo/./node_modules/ol/Kinetic.js","webpack://employee-geo/./node_modules/ol/geom/Circle.js","webpack://employee-geo/./node_modules/ol/css.js","webpack://employee-geo/./node_modules/ol/interaction/PinchZoom.js","webpack://employee-geo/./node_modules/ol/layer/Property.js","webpack://employee-geo/./node_modules/ol/MapEvent.js","webpack://employee-geo/./node_modules/ol/structs/RBush.js","webpack://employee-geo/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://employee-geo/./node_modules/ol/ImageState.js","webpack://employee-geo/./node_modules/ol/interaction/Interaction.js","webpack://employee-geo/./node_modules/ol/geom/flat/inflate.js","webpack://employee-geo/./node_modules/ol/source/Source.js","webpack://employee-geo/./node_modules/ol/Geolocation.js","webpack://employee-geo/./node_modules/ol/geom/flat/geodesic.js","webpack://employee-geo/./node_modules/ol/layer/Graticule.js","webpack://employee-geo/./node_modules/ol/render.js","webpack://employee-geo/./node_modules/ol/ImageCanvas.js","webpack://employee-geo/./node_modules/ol/pointer/EventType.js","webpack://employee-geo/./node_modules/ol/MapBrowserEventHandler.js","webpack://employee-geo/./node_modules/ol/MapProperty.js","webpack://employee-geo/./node_modules/ol/structs/PriorityQueue.js","webpack://employee-geo/./node_modules/ol/TileQueue.js","webpack://employee-geo/./node_modules/ol/control/Control.js","webpack://employee-geo/./node_modules/ol/control/Attribution.js","webpack://employee-geo/./node_modules/ol/control/Rotate.js","webpack://employee-geo/./node_modules/ol/control/Zoom.js","webpack://employee-geo/./node_modules/ol/layer/Group.js","webpack://employee-geo/./node_modules/ol/renderer/Map.js","webpack://employee-geo/./node_modules/ol/renderer/Composite.js","webpack://employee-geo/./node_modules/ol/Map.js","webpack://employee-geo/./node_modules/ol/control/defaults.js","webpack://employee-geo/./node_modules/ol/Overlay.js","webpack://employee-geo/./node_modules/ol/VectorRenderTile.js","webpack://employee-geo/./node_modules/ol/VectorTile.js","webpack://employee-geo/./node_modules/ol/array.js","webpack://employee-geo/./node_modules/ol/geom/MultiLineString.js","webpack://employee-geo/./node_modules/ol/Feature.js","webpack://employee-geo/./node_modules/ol/interaction/defaults.js","webpack://employee-geo/./node_modules/ol/size.js","webpack://employee-geo/./node_modules/ol/events/EventType.js","webpack://employee-geo/./node_modules/ol/interaction/KeyboardZoom.js","webpack://employee-geo/./node_modules/ol/style/RegularShape.js","webpack://employee-geo/./node_modules/ol/tilegrid/common.js","webpack://employee-geo/./node_modules/ol/colorlike.js","webpack://employee-geo/./node_modules/ol/geom/Geometry.js","webpack://employee-geo/./node_modules/ol/expr/expression.js","webpack://employee-geo/./node_modules/ol/expr/cpu.js","webpack://employee-geo/./node_modules/ol/render/canvas/style.js","webpack://employee-geo/./node_modules/ol/layer/BaseVector.js","webpack://employee-geo/./node_modules/ol/geom/flat/transform.js","webpack://employee-geo/./node_modules/ol/style/Circle.js","webpack://employee-geo/./node_modules/ol/has.js","webpack://employee-geo/./node_modules/ol/DataTile.js","webpack://employee-geo/./node_modules/ol/structs/LRUCache.js","webpack://employee-geo/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://employee-geo/./node_modules/ol/layer/TileProperty.js","webpack://employee-geo/./node_modules/ol/layer/BaseTile.js","webpack://employee-geo/./node_modules/ol/layer/Tile.js","webpack://employee-geo/./node_modules/ol/style/IconImage.js","webpack://employee-geo/./node_modules/ol/Tile.js","webpack://employee-geo/./src/index.ts","webpack://employee-geo/./node_modules/ol/source/VectorEventType.js","webpack://employee-geo/./node_modules/ol/ObjectEventType.js","webpack://employee-geo/./node_modules/ol/geom/flat/area.js","webpack://employee-geo/./node_modules/ol/layer/Base.js","webpack://employee-geo/./node_modules/ol/events/condition.js","webpack://employee-geo/./node_modules/ol/dom.js","webpack://employee-geo/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://employee-geo/./node_modules/ol/render/canvas.js","webpack://employee-geo/./node_modules/ol/style/Style.js","webpack://employee-geo/./node_modules/ol/events/Target.js","webpack://employee-geo/./node_modules/ol/color.js","webpack://employee-geo/./node_modules/ol/events.js","webpack://employee-geo/./node_modules/ol/style/Icon.js","webpack://employee-geo/./node_modules/ol/transform.js","webpack://employee-geo/./node_modules/ol/events/Key.js","webpack://employee-geo/./node_modules/ol/interaction/KeyboardPan.js","webpack://employee-geo/./node_modules/ol/render/Event.js","webpack://employee-geo/./node_modules/ol/geom/flat/interpolate.js","webpack://employee-geo/webpack/bootstrap","webpack://employee-geo/webpack/runtime/define property getters","webpack://employee-geo/webpack/runtime/hasOwnProperty shorthand","webpack://employee-geo/webpack/runtime/make namespace object","webpack://employee-geo/webpack/startup"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent.originalEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {toUserExtent} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @typedef {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} PointerHandler\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {PointerHandler|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {PointerHandler|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport MapEventType from '../MapEventType.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    /**\n     * @private\n     */\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {[SegmentData, number]} DragSegment\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have an `existing` property -\n * indicating whether there is an existing vertex underneath or not, a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array<DragSegment>}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     * @private\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     * @private\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(map.getCoordinateFromPixel(this.lastPixel_));\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<SegmentData>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const feature = segments[i].feature;\n        if (feature && !features.includes(feature)) {\n          this.featuresBeingModified_.push(feature);\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @param {boolean} existing The vertex represents an existing vertex.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries, existing) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    vertexFeature.set('existing', existing);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  findInsertVerticesAndUpdateDragSegments_(pixelCoordinate) {\n    this.handlePointerAtPixel_(pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      return;\n    }\n\n    const projection = this.getMap().getView().getProjection();\n    const insertVertices = [];\n    const vertex = vertexFeature.getGeometry().getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.geometry);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n\n      if (\n        segmentDataMatch.geometry.getType() === 'Circle' &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n      ) {\n        const closestVertex = closestOnSegmentData(\n          pixelCoordinate,\n          segmentDataMatch,\n          projection,\n        );\n        if (\n          coordinatesEqual(closestVertex, vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n        continue;\n      }\n\n      if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n        continue;\n      }\n\n      if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n        if (\n          componentSegments[uid][0] &&\n          componentSegments[uid][0].index === 0\n        ) {\n          let coordinates = segmentDataMatch.geometry.getCoordinates();\n          switch (segmentDataMatch.geometry.getType()) {\n            // prevent dragging closed linestrings by the connecting node\n            case 'LineString':\n            case 'MultiLineString':\n              continue;\n            // if dragging the first vertex of a polygon, ensure the other segment\n            // belongs to the closing vertex of the linear ring\n            case 'MultiPolygon':\n              coordinates = coordinates[depth[1]];\n            /* falls through */\n            case 'Polygon':\n              if (segmentDataMatch.index !== coordinates[depth[0]].length - 2) {\n                continue;\n              }\n              break;\n            default:\n            // pass\n          }\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n        continue;\n      }\n\n      if (\n        getUid(segment) in this.vertexSegments_ &&\n        !componentSegments[uid][0] &&\n        !componentSegments[uid][1]\n      ) {\n        insertVertices.push(segmentDataMatch);\n      }\n    }\n\n    return insertVertices;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @override\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(\n      evt,\n      this.dragSegments_.map(([segment]) => segment),\n    );\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n            geometry\n          );\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            circle.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(circle.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = circle\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            circle.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries, true);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n\n    if (insertVertices?.length && this.insertVertexCondition_(evt)) {\n      this.willModifyFeatures_(evt, insertVertices);\n\n      if (this.vertexFeature_) {\n        const vertex = this.vertexFeature_.getGeometry().getCoordinates();\n        for (let j = insertVertices.length - 1; j >= 0; --j) {\n          this.insertVertex_(insertVertices[j], vertex);\n        }\n        this.ignoreNextSingleClick_ = true;\n      }\n    }\n\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n          geometry\n        );\n        // Update a circle object in the R* bush:\n        const coordinates = circle.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        /** @type {import(\"../geom/Circle.js\").default | import(\"../geom/Polygon.js\").default} */\n        let circleGeometry = circle;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixelCoordinate) {\n    const map = this.getMap();\n    const pixel = map.getPixelFromCoordinate(pixelCoordinate);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n\n          if (\n            geom &&\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          // Stop and cleanup overlay vertex feature if a segment was hit and new vertex creation is not allowed by the insertVertexCondition\n          if (\n            !this.snappedToVertex_ &&\n            !this.insertVertexCondition_(this.lastPointerEvent_)\n          ) {\n            if (this.vertexFeature_) {\n              this.overlay_.getSource().removeFeature(this.vertexFeature_);\n              this.vertexFeature_ = null;\n            }\n            return;\n          }\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @return {boolean} A vertex was inserted.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return false;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    return true;\n  }\n\n  updatePointer_(coordinate) {\n    if (coordinate) {\n      this.findInsertVerticesAndUpdateDragSegments_(coordinate);\n    }\n    return this.vertexFeature_?.getGeometry().getCoordinates();\n  }\n\n  /**\n   * Get the current pointer position.\n   * @return {import(\"../coordinate.js\").Coordinate | null} The current pointer coordinate.\n   */\n  getPoint() {\n    const coordinate = this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!coordinate) {\n      return null;\n    }\n    return toUserCoordinate(\n      coordinate,\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Check if a point can be removed from the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be deleted at the current pointer position.\n   * @api\n   */\n  canRemovePoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        coordinatesEqual(segment[0], coordinate) ||\n        coordinatesEqual(segment[1], coordinate),\n    );\n  }\n\n  /**\n   * Removes the vertex currently being pointed from the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint(coordinate) {\n    if (coordinate) {\n      coordinate = fromUserCoordinate(\n        coordinate,\n        this.getMap().getView().getProjection(),\n      );\n      this.updatePointer_(coordinate);\n    }\n    if (\n      !this.lastPointerEvent_ ||\n      (this.lastPointerEvent_ &&\n        this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG)\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(\n        evt,\n        this.dragSegments_.map(([segment]) => segment),\n      );\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * Check if a point can be inserted to the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be inserted at the current pointer position.\n   * @api\n   */\n  canInsertPoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        !(\n          coordinatesEqual(segment[0], coordinate) ||\n          coordinatesEqual(segment[1], coordinate)\n        ),\n    );\n  }\n\n  /**\n   * Inserts the vertex currently being pointed to the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} A vertex was inserted.\n   * @api\n   */\n  insertPoint(coordinate) {\n    const pixelCoordinate = coordinate\n      ? fromUserCoordinate(coordinate, this.getMap().getView().getProjection())\n      : this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!pixelCoordinate) {\n      return false;\n    }\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n    return insertVertices.reduce(\n      (prev, segmentData) =>\n        prev || this.insertVertex_(segmentData, pixelCoordinate),\n      false,\n    );\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Event from '../events/Event.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n  UNSNAP: 'unsnap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  boundingExtent,\n  buffer,\n  createEmpty,\n  intersects as intersectsExtent,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {getIntersectionPoint} from '../geom/flat/segments.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} Segment\n * An array of two coordinates representing a line segment, or an array of one\n * coordinate representing a point.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Segment} segment Segment.\n * @property {boolean} [isIntersection] Is intersection.\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [GeometryType=import(\"../geom/Geometry.js\").default]\n * @typedef {(geometry: GeometryType, projection?: import(\"../proj/Projection.js\").default) => Array<Segment>} Segmenter\n * A function taking a {@link module:ol/geom/Geometry~Geometry} as argument and returning an array of {@link Segment}s.\n */\n\n/**\n * Each segmenter specified here will override the default segmenter for the\n * corresponding geometry type. To exclude all geometries of a specific geometry type from being snapped to,\n * set the segmenter to `null`.\n * @typedef {Object} Segmenters\n * @property {Segmenter<import(\"../geom/Point.js\").default>|null} [Point] Point segmenter.\n * @property {Segmenter<import(\"../geom/LineString.js\").default>|null} [LineString] LineString segmenter.\n * @property {Segmenter<import(\"../geom/Polygon.js\").default>|null} [Polygon] Polygon segmenter.\n * @property {Segmenter<import(\"../geom/Circle.js\").default>|null} [Circle] Circle segmenter.\n * @property {Segmenter<import(\"../geom/GeometryCollection.js\").default>|null} [GeometryCollection] GeometryCollection segmenter.\n * @property {Segmenter<import(\"../geom/MultiPoint.js\").default>|null} [MultiPoint] MultiPoint segmenter.\n * @property {Segmenter<import(\"../geom/MultiLineString.js\").default>|null} [MultiLineString] MultiLineString segmenter.\n * @property {Segmenter<import(\"../geom/MultiPolygon.js\").default>|null} [MultiPolygon] MultiPolygon segmenter.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {boolean} [intersection=false] Snap to intersections between segments.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {Segmenters} [segmenters] Custom segmenters by {@link module:ol/geom/Geometry~Type}. By default, the\n * following segmenters are used:\n *   - `Point`: A one-dimensional segment (e.g. `[[10, 20]]`) representing the point.\n *   - `LineString`: One two-dimensional segment (e.g. `[[10, 20], [30, 40]]`) for each segment of the linestring.\n *   - `Polygon`: One two-dimensional segment for each segment of the exterior ring and the interior rings.\n *   - `Circle`: One two-dimensional segment for each segment of a regular polygon with 32 points representing the circle circumference.\n *   - `GeometryCollection`: All segments of the contained geometries.\n *   - `MultiPoint`: One one-dimensional segment for each point.\n *   - `MultiLineString`: One two-dimensional segment for each segment of the linestrings.\n *   - `MultiPolygon`: One two-dimensional segment for each segment of the polygons.\n */\n\n/**\n * Information about the last snapped state.\n * @typedef {Object} SnappedInfo\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex - The snapped vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel - The pixel of the snapped vertex.\n * @property {import(\"../Feature.js\").default|null} feature - The feature being snapped.\n * @property {Segment|null} segment - Segment, or `null` if snapped to a vertex.\n */\n\n/***\n * @type {Object<string, Segmenter>}\n */\nconst GEOMETRY_SEGMENTERS = {\n  /**\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {Array<Segment>} Segments\n   */\n  Circle(geometry, projection) {\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    return GEOMETRY_SEGMENTERS.Polygon(polygon);\n  },\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {Array<Segment>} Segments\n   */\n  GeometryCollection(geometry, projection) {\n    /** @type {Array<Array<Segment>>} */\n    const segments = [];\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = GEOMETRY_SEGMENTERS[geometries[i].getType()];\n      if (segmenter) {\n        segments.push(segmenter(geometries[i], projection));\n      }\n    }\n    return segments.flat();\n  },\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  LineString(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n      segments.push([\n        coordinates.slice(i, i + 2),\n        coordinates.slice(i + stride, i + stride + 2),\n      ]);\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiLineString(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const ends = geometry.getEnds();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      for (let j = offset, jj = end - stride; j < jj; j += stride) {\n        segments.push([\n          coordinates.slice(j, j + 2),\n          coordinates.slice(j + stride, j + stride + 2),\n        ]);\n      }\n      offset = end;\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiPoint(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coordinates.length; i < ii; i += stride) {\n      segments.push([coordinates.slice(i, i + 2)]);\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiPolygon(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const endss = geometry.getEndss();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        const end = ends[j];\n        for (let k = offset, kk = end - stride; k < kk; k += stride) {\n          segments.push([\n            coordinates.slice(k, k + 2),\n            coordinates.slice(k + stride, k + stride + 2),\n          ]);\n        }\n        offset = end;\n      }\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  Point(geometry) {\n    return [[geometry.getFlatCoordinates().slice(0, 2)]];\n  },\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  Polygon(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const ends = geometry.getEnds();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      for (let j = offset, jj = end - stride; j < jj; j += stride) {\n        segments.push([\n          coordinates.slice(j, j + 2),\n          coordinates.slice(j + stride, j + stride + 2),\n        ]);\n      }\n      offset = end;\n    }\n    return segments;\n  },\n};\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n/** @type {Array<import('../extent.js').Extent>} */\nconst tempExtents = [];\n/** @type {Array<SegmentData>} */\nconst tempSegmentData = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap'|'unsnap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap'|'unsnap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that uses them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.intersection_ =\n      options.intersection !== undefined ? options.intersection : false;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * Holds information about the last snapped state.\n     * @type {SnappedInfo|null}\n     * @private\n     */\n    this.snapped_ = null;\n\n    /**\n     * @type {Object<string, Segmenter>}\n     * @private\n     */\n    this.segmenters_ = Object.assign(\n      {},\n      GEOMETRY_SEGMENTERS,\n      options.segmenters,\n    );\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.segmenters_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments = segmenter(\n          geometry,\n          this.getMap().getView().getProjection(),\n        );\n        let segmentCount = segments.length;\n        for (let i = 0; i < segmentCount; ++i) {\n          const segment = segments[i];\n          tempExtents[i] = boundingExtent(segment);\n          tempSegmentData[i] = {\n            feature: feature,\n            segment: segment,\n          };\n        }\n        tempExtents.length = segmentCount;\n        tempSegmentData.length = segmentCount;\n\n        if (this.intersection_) {\n          for (let j = 0, jj = segments.length; j < jj; ++j) {\n            const segment = segments[j];\n            if (segment.length === 1) {\n              continue;\n            }\n            const extent = tempExtents[j];\n            // Calculate intersections with own segments\n            for (let k = 0, kk = segments.length; k < kk; ++k) {\n              if (j === k || j - 1 === k || j + 1 === k) {\n                // Exclude self and neighbours\n                continue;\n              }\n              const otherSegment = segments[k];\n              if (!intersectsExtent(extent, tempExtents[k])) {\n                continue;\n              }\n              const intersection = getIntersectionPoint(segment, otherSegment);\n              if (!intersection) {\n                continue;\n              }\n              const intersectionSegment = [intersection];\n              tempExtents[segmentCount] = boundingExtent(intersectionSegment);\n              tempSegmentData[segmentCount++] = {\n                feature,\n                segment: intersectionSegment,\n                isIntersection: true,\n              };\n            }\n            // Calculate intersections with existing segments\n            const otherSegments = this.rBush_.getInExtent(tempExtents[j]);\n            for (const {segment: otherSegment} of otherSegments) {\n              if (otherSegment.length === 1) {\n                continue;\n              }\n              const intersection = getIntersectionPoint(segment, otherSegment);\n              if (!intersection) {\n                continue;\n              }\n              const intersectionSegment = [intersection];\n              tempExtents[segmentCount] = boundingExtent(intersectionSegment);\n              tempSegmentData[segmentCount++] = {\n                feature,\n                segment: intersectionSegment,\n                isIntersection: true,\n              };\n            }\n          }\n        }\n\n        if (segmentCount === 1) {\n          this.rBush_.insert(tempExtents[0], tempSegmentData[0]);\n        } else {\n          this.rBush_.load(tempExtents, tempSegmentData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * Checks if two snap data sets are equal.\n   * Compares the segment and the feature.\n   *\n   * @param {SnappedInfo} data1 The first snap data set.\n   * @param {SnappedInfo} data2 The second snap data set.\n   * @return {boolean} `true` if the data sets are equal, otherwise `false`.\n   * @private\n   */\n  areSnapDataEqual_(data1, data2) {\n    return data1.segment === data2.segment && data1.feature === data2.feature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n\n      // Dispatch UNSNAP event if already snapped\n      if (this.snapped_ && !this.areSnapDataEqual_(this.snapped_, result)) {\n        this.dispatchEvent(new SnapEvent(SnapEventType.UNSNAP, this.snapped_));\n      }\n\n      this.snapped_ = {\n        vertex: evt.coordinate,\n        vertexPixel: evt.pixel,\n        feature: result.feature,\n        segment: result.segment,\n      };\n      this.dispatchEvent(new SnapEvent(SnapEventType.SNAP, this.snapped_));\n    } else if (this.snapped_) {\n      // Dispatch UNSNAP event if no longer snapped\n      this.dispatchEvent(new SnapEvent(SnapEventType.UNSNAP, this.snapped_));\n      this.snapped_ = null;\n    }\n\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      for (const feature of featuresToUpdate) {\n        this.updateFeature_(feature);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    let features = this.getFeatures_();\n    if (!Array.isArray(features)) {\n      features = features.getArray();\n    }\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      for (const feature of features) {\n        this.addFeature(feature);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {SnappedInfo|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n    let isIntersection;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (\n          squaredPixelDistance <= squaredPixelTolerance &&\n          ((isIntersection && this.intersection_) ||\n            (!isIntersection && (this.vertex_ || this.edge_)))\n        ) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_ || this.intersection_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          for (const vertex of segmentData.segment) {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n              isIntersection = segmentData.isIntersection;\n            }\n          }\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n            closestFeature = segmentData.feature;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Feature from '../Feature.js';\nimport Event from '../events/Event.js';\nimport {always} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrickFetchService = void 0;\nconst mdt_client_1 = require(\"mdt-client\");\nclass BrickFetchService {\n    static fetchOtherBricks(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield mdt_client_1.Api.fetch(\"geo.CustomBrick\", {\n                filter: mdt_client_1.Filter.and(mdt_client_1.Filter.ne(\"ID\", id !== null && id !== void 0 ? id : 0), mdt_client_1.Filter.eq(\"FlagVirtual\", 0)),\n                select: [\n                    \"Name name\",\n                    \"Polygon polygon\",\n                    \"ID id\"\n                ]\n            });\n            return res.records.map(x => ({\n                name: x.name,\n                polygon: x.polygon,\n                id: x.id\n            }));\n        });\n    }\n}\nexports.BrickFetchService = BrickFetchService;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.registerModule = exports.legacy = exports.modules = exports.App = exports.Schema = exports.UiComponents = exports.ModuleRegistry = exports.RecordManager = exports.CommandManager = exports.Page = exports.Auth = exports.Filter = exports.m = exports.Api = exports.Ui = exports.Utils = exports.mUtils = exports.FieldControl = exports.ControlManager = exports.FormDashboard = exports.Form = exports.FormService = exports.List = exports.ListService = exports.SecurityManager = exports.Navigation = exports.MDT = void 0;\r\nvar package_json_1 = __importDefault(require(\"../package.json\"));\r\nexports.MDT = window.MDT;\r\nexports.Navigation = exports.MDT.Navigation, exports.SecurityManager = exports.MDT.SecurityManager, exports.ListService = exports.MDT.ListService, exports.List = exports.MDT.List, exports.FormService = exports.MDT.FormService, exports.Form = exports.MDT.Form, exports.FormDashboard = exports.MDT.FormDashboard, exports.ControlManager = exports.MDT.ControlManager, exports.FieldControl = exports.MDT.FieldControl, exports.mUtils = exports.MDT.mUtils, exports.Utils = exports.MDT.Utils, exports.Ui = exports.MDT.Ui, exports.Api = exports.MDT.Api, exports.m = exports.MDT.m, exports.Filter = exports.MDT.Filter, exports.Auth = exports.MDT.Auth, exports.Page = exports.MDT.Page, exports.CommandManager = exports.MDT.CommandManager, exports.RecordManager = exports.MDT.RecordManager, exports.ModuleRegistry = exports.MDT.ModuleRegistry, exports.UiComponents = exports.MDT.UiComponents, exports.Schema = exports.MDT.Schema, exports.App = exports.MDT.App, exports.modules = exports.MDT.modules, exports.legacy = exports.MDT.legacy;\r\nfunction registerModule(callback, context) {\r\n    exports.MDT.registerModule(callback, {\r\n        version: package_json_1.default.version,\r\n        name: context === null || context === void 0 ? void 0 : context.name\r\n    });\r\n}\r\nexports.registerModule = registerModule;\r\n//# sourceMappingURL=index.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/Geolocation\n */\nimport BaseObject from './Object.js';\nimport BaseEvent from './events/Event.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {toRadians} from './math.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport Feature from '../Feature.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\nimport {clamp} from '../math.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport EventType from '../render/EventType.js';\nimport {getVectorContext} from '../render.js';\nimport VectorSource from '../source/Vector.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @extends {VectorLayer<VectorSource<Feature>>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageWrapper from './Image.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = `${pixel[0] + offset[0]}px`;\n    const y = `${pixel[1] + offset[1]}px`;\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BricksMapControl = void 0;\nconst mdt_client_1 = require(\"mdt-client\");\nconst proj_js_1 = require(\"ol/proj.js\");\nconst ol_1 = require(\"ol\");\nconst OSM_1 = __importDefault(require(\"ol/source/OSM\"));\nconst interaction_1 = require(\"ol/interaction\");\nconst Tile_1 = __importDefault(require(\"ol/layer/Tile\"));\nconst Vector_1 = __importDefault(require(\"ol/source/Vector\"));\nconst Vector_2 = __importDefault(require(\"ol/layer/Vector\"));\nconst geom_1 = require(\"ol/geom\");\nconst Style_1 = __importDefault(require(\"ol/style/Style\"));\nconst Stroke_1 = __importDefault(require(\"ol/style/Stroke\"));\nconst Fill_1 = __importDefault(require(\"ol/style/Fill\"));\nconst FetchService_1 = require(\"FetchService\");\n(0, proj_js_1.useGeographic)();\nvar UpdateState;\n(function (UpdateState) {\n    UpdateState[UpdateState[\"map\"] = 0] = \"map\";\n    UpdateState[UpdateState[\"value\"] = 1] = \"value\";\n})(UpdateState || (UpdateState = {}));\nclass BricksMapControl {\n    constructor(form, _) {\n        this.form = form;\n        this._ = _;\n        this.typingTimer = null;\n        this.updState = UpdateState.value;\n        this.currentFeature = new ol_1.Collection();\n        this.$view = () => {\n            return m(\"#osm-brick-map\", {\n                config: (el, inited) => {\n                    if (inited)\n                        return;\n                    this.map.setTarget('osm-brick-map');\n                }\n            });\n        };\n        this.initMap();\n        this.prepareEvents();\n        this.showOtherBricks();\n    }\n    initMap() {\n        const raster = new Tile_1.default({\n            source: new OSM_1.default()\n        });\n        this.currentSource = new Vector_1.default();\n        this.currentVector = new Vector_2.default({\n            source: this.currentSource\n        });\n        this.view = new ol_1.View({\n            center: [40, 55],\n            zoom: 7\n        });\n        this.map = new ol_1.Map({\n            layers: [raster, this.currentVector],\n            target: 'map',\n            view: this.view,\n            controls: []\n        });\n        this.modify = new interaction_1.Modify({ features: this.currentFeature });\n        this.draw = new interaction_1.Draw({\n            source: this.currentSource,\n            type: \"Polygon\"\n        });\n        this.snap = new interaction_1.Snap({\n            vertex: true,\n            source: this.currentSource\n        });\n        if (this.form.isReadonly() || !mdt_client_1.SecurityManager.hasPermission(mdt_client_1.Schema.getObject(\"geo.CustomBrick\"), mdt_client_1.SecurityManager.PermissionLevel.Write))\n            return;\n        this.map.addInteraction(this.modify);\n        this.map.addInteraction(this.draw);\n        this.map.addInteraction(this.snap);\n    }\n    prepareEvents() {\n        const upContext = this;\n        let inited = false;\n        this.form.onBound(() => {\n            if (!upContext.form.isNewRecord() && !inited)\n                upContext.tryInitFromValue(0);\n            inited = true;\n        });\n        this.draw.on('drawend', function (event) {\n            const feature = event.feature;\n            upContext.updState = UpdateState.map;\n            upContext.updateFromFeature(feature);\n        });\n        this.modify.on(\"modifyend\", (event) => {\n            const feature = event.features.getArray()[0];\n            upContext.updState = UpdateState.map;\n            upContext.updateFromFeature(feature, true);\n        });\n        this.form.onFieldsUpdated({\n            fields: [BricksMapControl.PolygonFieldName],\n            execute() {\n                if (upContext.updState == UpdateState.map)\n                    return;\n                if (upContext.typingTimer) {\n                    clearTimeout(this.typingTimer);\n                }\n                upContext.typingTimer = setTimeout(() => {\n                    upContext.tryInitFromValue(500);\n                }, BricksMapControl.DelayBeforInputMapShow);\n            },\n            onComplete: () => { }\n        });\n    }\n    showOtherBricks() {\n        const id = this.form.getRecordId();\n        FetchService_1.BrickFetchService.fetchOtherBricks(id).then((recs) => {\n            recs.forEach(r => {\n                const coordinates = r.polygon;\n                const id = r.id;\n                const polygonFeature = this.parseFeatureFromString(coordinates);\n                polygonFeature.setId(id);\n                if (polygonFeature)\n                    this.currentSource.addFeature(polygonFeature);\n            });\n        });\n    }\n    updateFromFeature(feature, add = false) {\n        this.currentSource.forEachFeature((f) => {\n            if (!f.getId())\n                this.currentSource.removeFeature(f);\n        });\n        this.currentFeature.clear();\n        this.currentFeature.push(feature);\n        if (add)\n            this.currentSource.addFeature(feature);\n        feature.setStyle(BricksMapControl.getDefaultStyle());\n        const coordinates = feature.getGeometry().getCoordinates();\n        if (this.updState == UpdateState.map)\n            this.form.value(BricksMapControl.PolygonFieldName, BricksMapControl.coordinatesToString(coordinates[0]));\n        this.updState = UpdateState.value;\n    }\n    tryInitFromValue(cetnerMapDuration = 0) {\n        const coordinatesStr = this.form.value(BricksMapControl.PolygonFieldName);\n        if (!coordinatesStr)\n            return false;\n        const polygonFeature = this.parseFeatureFromString(coordinatesStr);\n        if (!polygonFeature)\n            return false;\n        this.updateFromFeature(polygonFeature, true);\n        const geometry = this.currentFeature.getArray()[0].getGeometry().clone();\n        this.view.fit(geometry, {\n            duration: cetnerMapDuration,\n            minResolution: 10,\n        });\n        return true;\n    }\n    parseFeatureFromString(string) {\n        const coordinateArray = string.split(',').map(coord => coord.trim());\n        const points = [];\n        coordinateArray.forEach(i => {\n            const items = i.split(' ');\n            if (items.length !== 2)\n                return;\n            try {\n                points.push([parseFloat(items[1]), parseFloat(items[0])]);\n            }\n            catch (e) {\n                return;\n            }\n        });\n        if (points.length !== coordinateArray.length)\n            return;\n        const polygon = new geom_1.Polygon([points]);\n        const polygonFeature = new ol_1.Feature({\n            geometry: polygon\n        });\n        return polygonFeature;\n    }\n    static getDefaultStyle() {\n        return new Style_1.default({\n            fill: new Fill_1.default({ color: \"rgba(117, 101, 220, 0.33)\" }),\n            stroke: new Stroke_1.default({ color: \"rgb(22, 122, 204)\" })\n        });\n    }\n    static coordinatesToString(coordinates) {\n        return coordinates.map(coord => [coord[1], coord[0]].join(' ')).join(',');\n    }\n}\nexports.BricksMapControl = BricksMapControl;\nBricksMapControl.DelayBeforInputMapShow = 500;\nBricksMapControl.PolygonFieldName = \"Polygon\";\nmdt_client_1.FormService.registerControl({\n    code: \"BrickEditor\",\n    title: \"Редактор бриков\",\n    type: BricksMapControl,\n    enabled: (object) => object.getCode() == \"geo.CustomBrick\",\n});\nconst style = document.createElement('style');\nstyle.innerHTML = `\n        #osm-brick-map {\n\t\t\theight: 500px;\n\t\t}\n    `;\ndocument.head.appendChild(style);\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8156);\n"],"names":["constructor","this","disposed","dispose","disposeInternal","Property","CollectionEvent","type","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","Error","splice","dispatchEvent","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","createOrUpdate","z","x","y","tileCoord","undefined","getKeyZXY","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","ImageTile","state","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","LOADED","unlistenImage_","changed","handleImageError_","ERROR","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","EMPTY","load","IDLE","LOADING","bind","MapBrowserEvent","map","originalEvent","dragging","frameState","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","preventDefault","stopPropagation","RenderBox","Disposable","className","geometry_","element_","document","createElement","style","position","pointerEvents","map_","startPixel_","endPixel_","setMap","render_","startPixel","endPixel","px","left","Math","min","top","width","abs","height","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","coordinates","getCoordinateFromPixelInternal","slice","setCoordinates","Polygon","getGeometry","DragBoxEventType","DragBoxEvent","Event","mapBrowserEvent","DragBox","Pointer","box_","minArea_","minArea","onBoxEnd","condition_","condition","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","handleDragEvent","handleUpEvent","completeBox","handleDownEvent","event","setActive","active","getMap","MultiPoint","layout","Array","isArray","setFlatCoordinates","appendPoint","point","flatCoordinates","getFlatCoordinates","clone","multiPoint","applyProperties","closestPointXY","closestPoint","minSquaredDistance","getExtent","stride","squaredDistance","j","getCoordinates","getPoint","getPoints","points","getType","intersectsExtent","extent","setLayout","assert","assertion","errorMessage","Layer","baseOptions","Object","assign","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","addChangeListener","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","states","getLayerState","getSource","getRenderSource","getSourceState","getState","handleSourceChange_","CHANGE","setTimeout","getFeatures","Promise","resolve","getData","isVisible","view","getMapInternal","layerState","getView","viewState","calculateExtent","layerStatesArray","getLayerGroup","find","layer","layerExtent","inView","getAttributions","attributions","getViewStateAndExtent","target","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","MAP","PRECOMPOSE","handlePrecompose_","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","clearRenderer","visible","resolution","minResolution","maxResolution","zoom","minZoom","maxZoom","instructions_","zIndex","offset_","context_","Proxy","property","push_","pushMethodArgs_","value","args","instructions","pushFunction","getContext","draw","context","instructionsAtIndex","instructionAtIndex","offset","lineStringLength","end","x1","y1","x2","y2","sqrt","boundingExtent","Infinity","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","equals","approximatelyEquals","tolerance","extendXY","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","apply","_boundingExtentXYs","wrapX","projection","projectionExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scale","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","unlistenImageChange","ready","Stroke","color_","color","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","padNumber","number","precision","numberString","toFixed","decimal","indexOf","join","add","delta","closestOnCircle","circle","r","getRadius","d","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","fractionDigits","normalizedDegrees","decimals","deg","sec","hdms","charAt","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","getWorldsAway","sourceExtentWidth","TileRange","contains","containsTileRange","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","getRevision","forEachSegment","getCoordinateAtM","m","extrapolate","getCoordinateAt","fraction","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","ret","getIntersectionPoint","segment1","segment2","a","b","c","t","u","PointerInteraction","handleMoveEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","handleEvent","stopEvent","updateTrackedPointers_","POINTERDRAG","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","centroid","clientX","clientY","Text","font_","font","keepUpright_","keepUpright","text_","text","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","fill_","fill","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setFill","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DblClickDragZoom","Interaction","opt_options","scaleDeltaByPixel_","duration_","duration","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","down_","MapBrowserEventType","waitForDblTap_","scaleDelta","touch0","touch1","lastDistance_","lastScaleDelta_","adjustResolutionInternal","anchor_","beginInteraction","direction","endInteraction","isPointerDraggingEvent","id","pointerId","toString","values","clearTimeout","endInteraction_","DragAndDropEvent","file","features","DragAndDrop","readAsBuffer_","formats_","formatConstructors","format","projection_","dropListenKeys_","source_","handleResult_","result","getUserProjection","getProjection","formats","input","TextDecoder","decode","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","getViewport","EventType","DROP","handleDrop","DRAGENTER","handleStop","DRAGOVER","getActive","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","addEventListener","LOAD","readAsArrayBuffer","readAsText","dropEffect","DragRotateAndZoom","lastAngle_","lastMagnitude_","deltaX","deltaY","theta","atan2","magnitude","angleDelta","adjustRotationInternal","DrawEventType","DrawEvent","feature","getSquaredDistance","getCoordinate","count","getCumulativeSquaredDistance","startIndex","endIndex","lowIndex","highIndex","lowWholeIndex","ceil","highWholeIndex","interpolateCoordinate","sd","appendGeometryTraceTargets","geometry","targets","appendTraceTarget","MultiLineString","MultiPolygon","polys","jj","GeometryCollection","geometries","getGeometries","sharedUpdateInfo","NaN","ring","rel","getPointSegmentRelationship","sharedRel","py","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","geometryFunction","mode","fromUserCoordinate","squaredLength","setCenterAndRadius","userProjection","transform","Constructor","Point","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","useSpatialIndex","getDefaultStyleFunction","updateWhileInteracting","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","ACTIVE","updateState_","getOverlay","CONTEXTMENU","move","pass","Date","now","addToDrawing_","handlePointerMove_","pointerType","DBLCLICK","startDrawing_","deactivateTrace_","toggleTraceState_","lowerLeft","upperRight","getFeaturesInExtent","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","getPixelFromCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","round","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","createOrUpdateCustomSketchLine_","getLinearRing","sketchLineGeom","getLayout","setGeometry","setGeometryName","last","done","removeLastPoint","sketchFeature","abortDrawing_","addFeature","newDrawing","shift","ending","sketchFeatures","overlaySource","styles","createEditingStyle","ExtentEvent","Extent","extent_","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","toUserExtent","fixedPoint","fixedP1","fixedP2","readNumber","string","parseFloat","writeNumber","to5","differentNumber","isNaN","Link","animationOptions","animate","params","replace","prefix","animationOptions_","params_","reduce","acc","replace_","prefix_","listenerKeys_","initial_","trackedCallbacks_","trackedValues_","getParamName_","name","get_","set_","delete_","delete","oldMap","MapEventType","MOVEEND","updateUrl_","handleChangeLayerGroup_","removeEventListener","url","URL","window","location","href","searchParams","history","replaceState","updateView","viewProperties","getZoom","setCenter","setZoom","layers","getAllLayers","layersParam","parseInt","Boolean","getVisible","setVisible","track","update","updateHistory_","visibilities","pushState","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","handleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","RBush","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","hitDetection","addFeature_","CollectionEventType","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","delta_","snapToPointer_","snapToPointer","writer","isRendered","handlePointerAtPixel_","willModifyFeatures_","evt","includes","removeFeature_","removeFeatureSegmentData_","removeFeature","rBush","nodesToRemove","node","nodeToRemove","segmentData","insert","depth","lines","rings","polygons","k","kk","centerSegmentData","circumferenceSegmentData","featureSegments","circleGeometry","getGeometriesArray","createOrUpdateVertexFeature_","existing","getInteracting","SINGLECLICK","removePoint","findInsertVerticesAndUpdateDragSegments_","insertVertices","vertexExtent","segmentDataMatches","getInExtent","componentSegments","compareIndexes","segmentDataMatch","uid","closestVertex","closestOnSegmentData","dragSegment","getStride","radius","setRadius","setGeometryCoordinates_","insertVertex_","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","layerFilter","forEachFeatureAtPixel","toUserCoordinate","geom","viewExtent","fromUserExtent","getResolution","box","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","updatePointer_","canRemovePoint","every","endsWith","removed","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","right","deleted","canInsertPoint","insertPoint","forEachInExtent","pointCoordinates","distanceToCenterSquared","distanceToCircumference","getClosestPoint","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","hasFeature","getStyle","setStyle","interactions","getInteractions","interaction","lastIndexOf","removeFeatureLayerAssociation_","toggle","SnapEventType","SnapEvent","GEOMETRY_SEGMENTERS","Circle","polygon","segmenter","flat","ends","getEnds","endss","getEndss","getFeatureFromEvent","tempExtents","tempSegmentData","Snap","vertex_","edge_","edge","intersection_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","snapped_","segmenters_","segmenters","register","feature_uid","segmentCount","otherSegment","intersectionSegment","isIntersection","otherSegments","getFeatures_","areSnapDataEqual_","data1","data2","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","keys","projectedCoordinate","segmentsLength","closestFeature","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEvent","startCoordinate","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","translate","classList","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","tmp","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","factor","pow","wrap","range","LayerRenderer","Observable","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","forEachFeatureAtCoordinate","matches","handleFontsChanged","ImageState","renderIfReadyAndVisible","loadImage","imageState","canvasPool","pixelContext","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","deferredContext_","containerReused","getImageData","col","row","data","willReadFrequently","clearRect","drawImage","getBackground","background","useContainer","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","lineTo","clip","prepareContainer","canvasTransform","dispatchRenderEvent_","hasListener","preRender","declutter","PRERENDER","postRender","POSTRENDER","renderDeferredInternal","getRenderContext","ZIndexContext","getRenderTransform","dx1","dy1","sx","sy","dx2","dy2","propagationStopped","defaultPrevented","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","log","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","View","hints_","animations_","updateAnimationKey_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","properties","ViewProperty","setProperties","resolutionConstraintInfo","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getUpdatedOptions_","newOptions","getProperties","var_args","isDef","getAnimating","resolveConstraints","arguments","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","ANIMATING","updateAnimations_","INTERACTING","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustCenterInternal","adjustResolution","adjustZoom","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","revision_","onInternal","len","onceInternal","ol_key","unInternal","unByKey","prototype","SimpleGeometry","computeExtent","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","startsWith","transformGeom2D","simpleGeometry","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","renderer","hitDetectionRenderer","beginGeometry","builderBegin","builderEndss","getOrientedFlatCoordinates","myEnds","inflate","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyle","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","setFillStrokeStyle","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","drawCircle","setFillStrokeStyles_","circleInstruction","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","segmentLength","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","drawPoint","pointGeometry","drawMultiPoint","multiPointGeometry","filteredFlatCoordinates","setImageStyle","imageStyle","sharedData","origin","drawFlatCoordinates_","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","drawText","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","p","hitDetectionBackgroundFill","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","strokeWidth","setTextStyle","textStyle","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","line","richTextToPlainText","part","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","split","widths","heights","lineWidths","renderWidth","contextInstructions","label","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","alignAndScale","repeatSize","restore","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","fn","declutterImageWithText","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","pixelIndex","getPixelIndexArray","imageData","idx","zs","Number","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","HIT_DETECT_RESOLUTION","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","viewHints","getWrapX","endWorld","world","setDrawContext_","resetDrawContext_","alpha","globalAlpha","layerIndex","replayGroup","transforms","styleFunction","userExtent","imageSmoothingEnabled","getTransformFromProjections","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","padStart","originalStyle","getGeometryFunction","imgSize","imgContext","img","Icon","anchorXUnits","anchorYUnits","getZIndex","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","setTransform","drawGeometry","createHitDetectionImageData","resultFeatures","g","hitDetect","match","all","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userTransform","loadFeatures","toUserResolution","dirty","renderFeature","replayGroupInstructions","getOverlaps","builderGroup","loading","VectorLayer","BaseVector","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","then","defineProperty","exports","BrickFetchService","mdt_client_1","fetchOtherBricks","Api","fetch","Filter","and","ne","eq","select","records","CanvasImmediateRenderer","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","drawGeometryCollection","drawFeature","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","getCacheKey","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","createPattern","setSize","maxCacheSize","quickselect","compare","defaultCompare","s","exp","swap","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","parent","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","level","targetNode","minEnlargement","bboxArea","enlargement","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","DEFAULT_RADIUS","getDistance","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","asin","lon","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","MOVESTART","LOADSTART","LOADEND","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileSize","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","getDefaultTileGrid","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","TileSource","Source","attributionsCollapsible","tilePixelRatio_","tilePixelRatio","tmpSize","key_","tileOptions","transition","zDirection","getGutterForProjection","getKey","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","gridProjection","refresh","TileSourceEvent","tile","UrlTile","cacheSize","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tileState","TileState","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","charCodeAt","stopCharCode","charCode","stop","expandUrl","templates","tileUrlFunctions","createFromTileUrlFunctions","createFromTemplates","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","equivalent","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","sourceProjection","getTileInternal","sourceTileGrid","targetTileGrid","wrappedTileCoord","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","xyzOptions","gridOptions","createXYZ","gutter_","ATTRIBUTION","LinearRing","geometryCollectionGeometry","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisEndss","appendPolygon","newEndss","multiPolygon","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","sourceProj","targetProj","getPointResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","createTransformFromCoordinateTransform","getTransform","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","ReprojTile","Tile","getTileFunction","renderEdges","renderEdges_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","sources","clipExtent","triangulation","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","leftToLoad","sourceListenKey","unlistenSources_","release","code_","code","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getWorldExtent","getAxisOrientation","setGlobal","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","EPSG4326Projection","destination","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","makeTransformFunction","transformer","coord","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","makeProjection","pointResolution","getter","projUnits","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","defaultCode","coordTransform","pointLength","addCoordinateTransforms","destProj","lonLat","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","transformExtent","transformWithProjections","destinationProjection","setUserProjection","clearUserProjection","useGeographic","destProjection","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","transformed","addCommon","__importDefault","mod","__esModule","registerModule","legacy","modules","App","Schema","UiComponents","ModuleRegistry","RecordManager","CommandManager","Page","Auth","Ui","Utils","mUtils","FieldControl","ControlManager","FormDashboard","Form","FormService","List","ListService","SecurityManager","Navigation","MDT","package_json_1","version","default","linearRingIsClockwise","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","CLICK","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","easeIn","easeOut","inAndOut","linear","object","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","Fill","patternImage_","patternImage","CanvasPattern","CanvasGradient","douglasPeucker","simplifiedOffset","markers","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","ImageWrapper","stateOrLoader","loader","requestResolution","HTMLImageElement","ImageBitmap","HTMLVideoElement","catch","error","console","finally","listenImage","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","decodeFallback","handleLoad","handleError","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","POSTCOMPOSE","RENDERCOMPLETE","linearRingss","DragRotate","abstract","uidCounter_","getUid","obj","ol_uid","VERSION","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","getPropertiesInternal","hasProperties","notify","eventType","PROPERTYCHANGE","removeChangeListener","silent","unset","ends_","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRings","linearRings","circular","sphereRadius","fromExtent","fromCircle","sides","arrayLength","startAngle","makeRegular","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","nextArgs","toPromise","err","promiseGetter","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","levels","info","warn","DragZoom","out_","out","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","onFocusOnly","noKinetic_","getAngle","centerpx","createSnapToN","createSnapToZero","xhr","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","readProjection","onerror","send","loadFeaturesXhr","dataProjection","tmpTransform","RenderFeature","id_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","getId","pixelExtent","projectedExtent","enableSimplifyTransformed","VectorSourceEvent","VectorSource","loader_","format_","url_","strategy_","strategy","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","ObjectEventType","valid","indexedFeature","extents","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","loadedExtentsRtree","extentsToLoad","extentToLoad","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","removeFeatures","featureChangeKeys","idString","setLoader","setOverlaps","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getRadiusSquared_","circleExtent","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","fontWeights","normal","bold","getFontParameters","fontSpec","weight","variant","trim","families","family","PinchZoom","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","MapEvent","rbush_","items_","forEach_","rbush","DoubleClickZoom","browserEvent","shiftKey","pan","zoomByDelta","currentZoom","newZoom","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","getAttributionsCollapsible","setAttributions","setState","attributionLike","GeolocationError","message","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","heading","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","Style","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","setRenderOrder","realWorldExtent","renderExtent","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","CanvasRenderingContext2D","canvasPixelRatio","getVectorContext","textPoint","getMeridianPoint_","getParallelPoint_","interval","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","epsg4326Projection","frac","meridian","bottom","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","error_","getError","handleLoad_","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","getRootNode","isMoving_","cancelable","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","visibleAttributions","Set","flatMap","setCollapsible","from","updateElement_","display","attribution","innerHTML","handleToggle_","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","autoHide_","autoHide","resetNorth_","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","GroupEvent","LayerGroup","Base","layersListenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapRenderer","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","thisArg2","managed","translatedCoordinate","offsets","layerStates","numLayers","order","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","expireIconCache","Map","fontChangeListenerKey_","redrawText","insertBefore","firstChild","children_","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","addControl","getControls","addInteraction","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getTargetElement","getOverlayById","group","getLoadingOrNotReady","viewCoordinate","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","WHEEL","KEYDOWN","rootNode","currentDoc","ShadowRoot","host","documentElement","interactionsArray","handlePostRender","tileQueue","lowOnFrameBudget","time","unobserve","Composite","targetRoot","KEYPRESS","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","removeSourceTiles_","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","getTileUrl","onLoad","setFeatures","onError","binarySearch","haystack","needle","comparator","cmp","ascending","low","high","found","descending","linearFindNearest","candidate","reverseSubArray","extension","arr1","arr2","len1","isSorted","strict","currentVal","res","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","geometryOrProperties","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getGeometryName","handleGeometryChange_","createStyleFunction","setId","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","hasArea","toSize","BLUR","FOCUS","RESIZE","KeyboardZoom","keyEvent","RegularShape","hitDetectionCanvas_","radius2_","radius2","size_","renderOptions_","imageState_","getRadius2","createHitDetectionCanvas_","cacheKey","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","Geometry","extentRevision_","simplifyTransformedInternal","revision","MIN_VALUE","simplify","inCoordinates","outCoordinates","projTransform","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","mapState","parse","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","base","JSON","stringify","interpolation","operation","argCount","needleType","arg","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","setAnchor","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","setZIndex","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","BaseVectorLayer","declutter_","updateWhileAnimating_","updateWhileInteracting_","declutterGroup","renderOrder","createDefaultStyle","styleLike","toStyleLike","setDeclutter","transform2D","destinationStride","CircleStyle","ua","userAgent","toLowerCase","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","asImageLike","disposedError","defaultSize","DataTile","data_","controller_","controller","abort","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","sourceKey","addTileToLookup","tilesByZ","has","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","tileOrigin","sourceRevision","enqueueTiles","initialZ","preload","minZ","tileQueueKey","findStaleTile_","staleKeys","endTransition","findAltTiles_","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","getAlpha","parentZ","canvasScale","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","BaseTile","taintedTestContext","IconImage","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","onChange","transition_","transitionStarts_","getTileCoord","inTransition","BricksMapControl","proj_js_1","ol_1","OSM_1","interaction_1","Tile_1","Vector_1","Vector_2","geom_1","Style_1","Stroke_1","Fill_1","FetchService_1","UpdateState","form","_","typingTimer","updState","currentFeature","$view","config","el","inited","initMap","prepareEvents","showOtherBricks","raster","currentSource","currentVector","modify","isReadonly","hasPermission","getObject","PermissionLevel","Write","upContext","onBound","isNewRecord","tryInitFromValue","updateFromFeature","onFieldsUpdated","fields","PolygonFieldName","DelayBeforInputMapShow","onComplete","getRecordId","recs","polygonFeature","parseFeatureFromString","getDefaultStyle","coordinatesToString","cetnerMapDuration","coordinatesStr","coordinateArray","registerControl","head","twiceArea","BaseLayer","background_","className_","setBackground","setMaxResolution","setMinResolution","zindex","conditions","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focusWithTabindex","hasAttribute","activeElement","focus","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","primaryAction","isPrimary","createCanvasContext2D","settings","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","outerWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeChildren","lastChild","replaceChildren","oldChildren","oldChild","newChild","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","timeLeft","handleWheelZoom_","setMouseAnchor","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","registerFont","retries","fontFaceSet","async","isAvailable","fontFaces","checkFamily","checkWeight","check","checkedFontsProperties","fonts","currentRetries","needCheck","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureTextWidth","curr","getTextDimensions","baseStyle","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","executeLabelInstructions","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","white","blue","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","dispatching","pendingRemovals","propagate","pr","getListeners","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","throwInvalidColor","parseRgba","rgb","rgbDivider","hex","colorFromHex","colorComponent","desynchronized","invalidCheckFillStyle","colorString","colorFromImage","asString","MAX_CACHE_SIZE","withAlpha","b1","v","b2","a1","rgbaToLcha","q","lchaToRgba","fromString","asArray","listen","originalListener","eventsKey","listenOnce","unlistenByKey","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","offsetOrigin_","initialOptions_","iconImageSize","create","multiply","transform1","transform2","d1","e1","f1","e2","f2","setFromArray","compose","makeInverse","det","matrixPrecision","cssTransform","cssTransform1","cssTransform2","mat1","mat2","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","Key","mapUnitsDelta","RenderEvent","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","definition","enumerable","prop","Symbol","toStringTag"],"sourceRoot":""}